#####################################################################
#   Macros
#####################################################################

[gcode_macro G32]
gcode:
    SAVE_GCODE_STATE NAME=STATE_G32
    G90
    G28
    QUAD_GANTRY_LEVEL
    G28
    ##  Uncomment for for your size printer:
    #--------------------------------------------------------------------
    ##  Uncomment for 250mm build
    #G0 X125 Y125 Z30 F3600
    
    ##  Uncomment for 300 build
    #G0 X150 Y150 Z30 F3600
    
    ##  Uncomment for 350mm build
    G0 X175 Y175 Z30 F3600
    #--------------------------------------------------------------------
    RESTORE_GCODE_STATE NAME=STATE_G32

#####################################################################
#   print_start macro
#####################################################################

## *** THINGS TO UNCOMMENT: ***
## Bed mesh (2 lines at 2 locations)
## Z_TILT_ADJUST if your printer is a Trident
## Quad gantry level if your printer is a V2
## Nevermore - if you have one

#[gcode_macro PRINT_START]
#gcode:
#  # This part fetches data from your slicer. Such as bed temp, extruder temp, chamber temp and size of your printer.
#  {% set target_bed = params.BED|int %}
#  {% set target_extruder = params.EXTRUDER|int %}
#  {% set target_chamber = params.CHAMBER|default("40")|int %}
#  {% set x_wait = printer.toolhead.axis_maximum.x|float / 2 %}
#  {% set y_wait = printer.toolhead.axis_maximum.y|float / 2 %}
#
#  # Homes the printer, sets absolute positioning and updates the Stealthburner leds.
#  led_homing            # Sets LED's to homing-mode
#  G28                   # Full home (XYZ)
#  G90                   # Absolut position
#
#  ##  Uncomment for bed mesh (1 of 2)
#  BED_MESH_CLEAR       # Clears old saved bed mesh (if any)
#
#  # Checks if the bed temp is higher than 90c - if so then trigger a heatsoak.
#  {% if params.BED|int > 90 %}
#    SET_DISPLAY_TEXT MSG="Bed: {target_bed}c"           # Displays info
#    #led_heating
#    #led_toolhead_heating                                # Sets LED's to heating-mode
#    M106 S255                                           # Turns on the PT-fan
#    M107
#    ##  Uncomment if you have a Nevermore.
#    #SET_PIN PIN=nevermore VALUE=1                      # Turns on the nevermore
#
#    G1 X{x_wait} Y{y_wait} Z15 F9000                    # Goes to center of the bed
#    M190 S{target_bed}                                  # Sets the target temp for the bed
#    #SET_DISPLAY_TEXT MSG="Heatsoak: {target_chamber}c"  # Displays info
#    #TEMPERATURE_WAIT SENSOR="temperature_sensor chamber" MINIMUM={target_chamber}   # Waits for chamber to reach desired temp
#
#  # If the bed temp is not over 90c, then it skips the heatsoak and just heats up to set temp with a 5min soak
#  {% else %}
#    M107
#    SET_DISPLAY_TEXT MSG="Bed: {target_bed}c"           # Displays info
#    #led_heating
#    #led_toolhead_heating                                # Sets SB-leds to heating-mode
#    G1 X{x_wait} Y{y_wait} Z15 F9000                    # Goes to center of the bed
#    M190 S{target_bed}                                  # Sets the target temp for the bed
#    SET_DISPLAY_TEXT MSG="Soak for 5min"                # Displays info
#    G4 P300000                                          # Waits 5 min for the bedtemp to stabilize
#  {% endif %}
#
#  # Heating nozzle to 150 degrees. This helps with getting a correct Z-home
#  SET_DISPLAY_TEXT MSG="Hotend: 150c"          # Displays info
#  M109 S150                                    # Heats the nozzle to 150c
#
#  ## NOT BEING USED AS THE YAVOTH WITH BELT KEEPER PUSHES THE NOZZLE TOO FAR FORWARD ##
#  #Clean the nozzle
#  #led_cleaning
#  #clean_nozzle
#  #SET_DISPLAY_TEXT MSG="Cleaning Nozzle" 
#  
#  ##  Uncomment for Trident (Z_TILT_ADJUST)
#  #SET_DISPLAY_TEXT MSG="Z-tilt adjust"     # Displays info
#  #STATUS_LEVELING                          # Sets SB-leds to leveling-mode
#  #Z_TILT_ADJUST                            # Levels the buildplate via z_tilt_adjust
#  #G28 Z                                    # Homes Z again after z_tilt_adjust
#
#  ##  Uncomment for V2 (Quad gantry level AKA QGL)
#  SET_DISPLAY_TEXT MSG="QGL"      # Displays info
#  #led_leveling                    # Sets SB-leds to leveling-mode
#  leds_off
#  M107                          #Disable Part Cooling Fan
#  quad_gantry_level               # Levels the buildplate via QGL
#  G28 Z                           # Homes Z again after QGL
#
#  ##  Uncomment for Klicky auto-z
#  #CALIBRATE_Z                                 # Calibrates Z-offset with klicky
#  #SET_DISPLAY_TEXT MSG="Z-offset"             # Displays info
#
#  ##  Uncomment for bed mesh (2 of 2)
#  SET_DISPLAY_TEXT MSG="Bed mesh"    # Displays info
#  #led_meshing                        # Sets SB-leds to bed mesh-mode
#  leds_off
#  bed_mesh_calibrate                 # Starts bed mesh
#
#  # Heats up the nozzle up to target via data from slicer
#  SET_DISPLAY_TEXT MSG="Hotend: {target_extruder}c"             # Displays info
#  #led_heating
#  #led_toolhead_heating                                          # Sets SB-leds to heating-mode
#  G1 X{x_wait} Y{y_wait} Z15 F9000                              # Goes to center of the bed
#  M107                                                          # Turns off partcooling fan
#  M109 S{target_extruder}                                       # Heats the nozzle to printing temp
#
#  #Turn On Filament Sensor
#  SET_FILAMENT_SENSOR SENSOR=filament_sensor_0 ENABLE=1
#
#  ## NOT BEING USED AS THE YAVOTH WITH BELT KEEPER PUSHES THE NOZZLE TOO FAR FORWARD ##
#  #Clean Nozzle again 
#  #SET_DISPLAY_TEXT MSG="Cleaning Nozzle"
#  #led_cleaning
#  #clean_nozzle
#  
#  # Gets ready to print by doing a purge line and updating the SB-leds
#  SET_DISPLAY_TEXT MSG="Printer goes brr"          # Displays info
#  led_printing                                     # Sets SB-leds to printing-mode
#  G0 X{x_wait - 50} Y4 F10000                      # Moves to starting point
#  G0 Z0.4                                          # Raises Z to 0.4
#  G91                                              # Incremental positioning 
#  G1 X100 E20 F1000                                # Purge line
#  G90                                              # Absolut position

#####################################################################
#   Print End
#####################################################################

#   Use PRINT_END for the slicer ending script - please customise for your slicer of choice
#[gcode_macro PRINT_END]
#gcode:
#    # safe anti-stringing move coords
#    {% set th = printer.toolhead %}
#    {% set x_safe = th.position.x + 20 * (1 if th.axis_maximum.x - th.position.x > 20 else -1) %}
#    {% set y_safe = th.position.y + 20 * (1 if th.axis_maximum.y - th.position.y > 20 else -1) %}
#    {% set z_safe = [th.position.z + 5, th.axis_maximum.z]|min %}
#    
#    SAVE_GCODE_STATE NAME=STATE_PRINT_END
#    
#    M400                           ; wait for buffer to clear
#    G92 E0                         ; zero the extruder
#    G1 E-10.0 F1800                 ; retract filament
#    
#    TURN_OFF_HEATERS
#    
#    #Turn Off Filament Sensor
#    SET_FILAMENT_SENSOR SENSOR=filament_sensor_0 ENABLE=0
#    
#    G90                                      ; absolute positioning
#    G0 X{x_safe} Y{y_safe} Z{z_safe} F20000  ; move nozzle to remove stringing
#    G0 X{th.axis_maximum.x//2} Y{th.axis_maximum.y - 2} F3600  ; park nozzle at rear
#    M107                                     ; turn off fan
#    G1 Z30 F1200 #Move Z up just a little
#    BED_MESH_CLEAR
#    led_party_time
#    RESTORE_GCODE_STATE NAME=STATE_PRINT_END


#####################################################################
#   Print Pause
#####################################################################

[gcode_macro PAUSE]
rename_existing: BASE_PAUSE
gcode:
    # Parameters
    {% set z = params.Z|default(10)|int %}                                                   ; z hop amount

    {% if printer['pause_resume'].is_paused|int == 0 %}
        SET_GCODE_VARIABLE MACRO=RESUME VARIABLE=zhop VALUE={z}                              ; set z hop variable for reference in resume macro
        SET_GCODE_VARIABLE MACRO=RESUME VARIABLE=etemp VALUE={printer['extruder'].target}    ; set hotend temp variable for reference in resume macro

        SET_FILAMENT_SENSOR SENSOR=filament_sensor_0 ENABLE=0                                  ; disable filament sensor
        SAVE_GCODE_STATE NAME=PAUSE                                                          ; save current print position for resume
        BASE_PAUSE                                                                           ; pause print
        {% if (printer.gcode_move.position.z + z) < printer.toolhead.axis_maximum.z %}       ; check that zhop doesn't exceed z max
            G91                                                                              ; relative positioning
            G1 Z{z} F900                                                                     ; raise Z up by z hop amount
        {% else %}
            { action_respond_info("Pause zhop exceeds maximum Z height.") }                  ; if z max is exceeded, show message and set zhop value for resume to 0
            SET_GCODE_VARIABLE MACRO=RESUME VARIABLE=zhop VALUE=0
        {% endif %}
        G90                                                                                  ; absolute positioning
        G1 X{printer.toolhead.axis_maximum.x/2} Y{printer.toolhead.axis_minimum.y+5} F6000   ; park toolhead at front center
        SAVE_GCODE_STATE NAME=PAUSEPARK                                                      ; save parked position in case toolhead is moved during the pause (otherwise the return zhop can error)
        M104 S0                                                                              ; turn off hotend
        SET_IDLE_TIMEOUT TIMEOUT=43200                                                       ; set timeout to 12 hours
    {% endif %}

#####################################################################
#   Print Resume
#####################################################################

[gcode_macro RESUME]
rename_existing: BASE_RESUME
variable_zhop: 0
variable_etemp: 0
gcode:
    # Parameters
    {% set e = params.E|default(2.5)|int %}                                          ; hotend prime amount (in mm)

    {% if printer['pause_resume'].is_paused|int == 1 %}
        SET_FILAMENT_SENSOR SENSOR=filament_sensor_0 ENABLE=1                          ; enable filament sensor
        #INITIAL_RGB                                                                    ; reset LCD color
        SET_IDLE_TIMEOUT TIMEOUT={printer.configfile.settings.idle_timeout.timeout}  ; set timeout back to configured value
        {% if etemp > 0 %}
            M109 S{etemp|int}                                                        ; wait for hotend to heat back up
        {% endif %}
        RESTORE_GCODE_STATE NAME=PAUSEPARK MOVE=1 MOVE_SPEED=100                     ; go back to parked position in case toolhead was moved during pause (otherwise the return zhop can error)
        G91                                                                          ; relative positioning
        M83                                                                          ; relative extruder positioning
        {% if printer[printer.toolhead.extruder].temperature >= printer.configfile.settings.extruder.min_extrude_temp %}
            G1 Z{zhop * -1} E{e} F900                                                ; prime nozzle by E, lower Z back down
        {% else %}
            G1 Z{zhop * -1} F900                                                     ; lower Z back down without priming (just in case we are testing the macro with cold hotend)
        {% endif %}
        RESTORE_GCODE_STATE NAME=PAUSE MOVE=1 MOVE_SPEED=60                          ; restore position
        BASE_RESUME                                                                  ; resume print
    {% endif %}

####################################################################
#   Print Cancel
#####################################################################

[gcode_macro CANCEL_PRINT]
rename_existing: BASE_CANCEL_PRINT
gcode:
    SET_IDLE_TIMEOUT TIMEOUT={printer.configfile.settings.idle_timeout.timeout} ; set timeout back to configured value
    CLEAR_PAUSE
    SDCARD_RESET_FILE
    PRINT_END
    led_standby
    BASE_CANCEL_PRINT
    
####################################################################
#   Preheat to 110 Macro
#####################################################################

[gcode_macro PREHEAT_110]
gcode:
    #LCDRGB R=0 G=1 B=0  ; Turn LCD green
    SET_DISPLAY_TEXT MSG="Heatbed 110c" 
    #led_heating
    #led_toolhead_heating
    M190 S110

####################################################################
#   Turn Off Filament Sensors
#####################################################################

[gcode_macro TURN_OFF_FILAMENT_SENSORS]
gcode:
    SET_FILAMENT_SENSOR SENSOR=filament_sensor_0 ENABLE=0

####################################################################
#   M600
#####################################################################

[gcode_macro M600]
gcode:
    #LCDRGB R=0 G=1 B=0  ; Turn LCD green
    SET_DISPLAY_TEXT MSG="Change Colour" 
    #led_filament_runout
    PAUSE                ; Pause

####################################################################
#   Delayed Macro Disable Filament Sensor
#####################################################################

[delayed_gcode DISABLEFILAMENTSENSOR]
initial_duration: 1
gcode:
    SET_FILAMENT_SENSOR SENSOR=filament_sensor_0 ENABLE=0



